{"version":3,"sources":["components/Navbar.js","components/Country.js","components/CardCountry.js","App.js","index.js"],"names":["Navbar","Box","sx","flexGrow","AppBar","position","boxShadow","bgcolor","Toolbar","Typography","variant","component","color","fontFamily","fontWeight","fontSize","textAlign","pl","Country","useState","url","setUrl","contry","setContry","loading","setLoading","error","setError","currentPage","setCurrentPage","postsPerPage","search","setSearch","datos","a","fetch","data","json","dataJson","useEffect","onClickSearch","e","console","log","setTimeout","onKeyPressSearch","keyCode","preventDefault","indexOfLastPost","indexOfFirstPost","currentPosts","status","window","location","reload","slice","Container","mt","width","height","display","ml","gap","flexWrap","justifyContent","flexDirection","alignItems","Paper","elevation","border","p","IconButton","onClick","TextField","flex","placeholder","id","onChange","evt","target","value","onKeyDown","inputProps","FormControl","InputLabel","Select","labelId","label","event","MenuItem","py","Grid","container","map","elm","index","item","xs","sm","m","Card","maxWidth","maxHeight","CardMedia","image","flags","alt","name","common","CardContent","style","population","toLocaleString","replace","region","capital","CardActions","textDecoration","to","pathname","Button","mb","size","CircularProgress","Pagination","pt","count","Math","round","length","shape","hideNextButton","hidePrevButton","defaultPage","page","textContent","CardCountry","handle","useParams","handleC","Stack","spacing","direction","subregion","tld","Object","values","currencies","languages","join","undefined","borders","App","path","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4ec049e7.chunk.js","sourcesContent":["import * as React from \"react\";\r\nimport AppBar from \"@mui/material/AppBar\";\r\nimport Box from \"@mui/material/Box\";\r\nimport Toolbar from \"@mui/material/Toolbar\";\r\n\r\nimport Typography from \"@mui/material/Typography\";\r\nexport default function Navbar() {\r\n  return (\r\n    <Box sx={{ flexGrow: 1 }}>\r\n      <AppBar position=\"static\" sx={{ boxShadow: 4, bgcolor: \"#fff\" }}>\r\n        <Toolbar>\r\n          <Typography\r\n            variant=\"h6\"\r\n            component=\"div\"\r\n            sx={{\r\n              color: \"#000\",\r\n              fontFamily: \"Roboto\",\r\n              fontWeight: 700,\r\n              fontSize: \"25px\",\r\n              flexGrow: 1,\r\n              textAlign: \"start\",\r\n              pl: 5,\r\n            }}\r\n          >\r\n            Where in the world?\r\n          </Typography>           \r\n        </Toolbar>\r\n      </AppBar>\r\n    </Box>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport Paper from \"@mui/material/Paper\";\r\nimport InputBase from \"@mui/material/InputBase\";\r\nimport IconButton from \"@mui/material/IconButton\";\r\nimport SearchIcon from \"@mui/icons-material/Search\";\r\nimport Box from \"@mui/material/Paper\";\r\nimport Container from \"@mui/material/Container\";\r\nimport InputLabel from \"@mui/material/InputLabel\";\r\nimport MenuItem from \"@mui/material/MenuItem\";\r\nimport FormControl from \"@mui/material/FormControl\";\r\nimport Select from \"@mui/material/Select\";\r\nimport Card from \"@mui/material/Card\";\r\nimport Grid from \"@mui/material/Grid\";\r\nimport Button from \"@mui/material/Button\";\r\nimport Pagination from \"@mui/material/Pagination\";\r\nimport CardActions from \"@mui/material/CardActions\";\r\nimport CardContent from \"@mui/material/CardContent\";\r\nimport CardMedia from \"@mui/material/CardMedia\";\r\nimport ChevronRightIcon from \"@mui/icons-material/ChevronRight\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport TextField from '@mui/material/TextField';\r\n\r\nimport CircularProgress from \"@mui/material/CircularProgress\";\r\n\r\nimport { Link } from \"react-router-dom\";\r\nconst Country = () => {\r\n  const [url, setUrl] = useState(\"https://restcountries.com/v3/all\");\r\n  const [contry, setContry] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState(false);\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [postsPerPage, setPostsPerPage] = useState(12);\r\n  const [search, setSearch] = useState(\"\");\r\n\r\n  const datos = async () => {\r\n    const data = await fetch(url);\r\n    const dataJson = await data.json();\r\n    setContry(dataJson);\r\n    setLoading(true);\r\n  };\r\n  \r\n  useEffect(() => {\r\n    datos();\r\n  },[url] );\r\n\r\n  const handleChange = (event) => {\r\n    setLoading(false);\r\n\r\n    setUrl(event.target.value);\r\n  };\r\n  const handleChangeInput = (evt) => {\r\n    setSearch(evt.target.value);\r\n  };\r\n  const handleChangePage = (page) => {\r\n    setLoading(false);\r\n    setTimeout(() => {\r\n      setLoading(true);\r\n      setCurrentPage(page);\r\n    }, 400);\r\n  };\r\n\r\n  const onClickSearch = async (e) => {\r\n    if (search ===\"\") {\r\n      setError(true);\r\n      console.log(\"err\");\r\n    } else {\r\n      setLoading(false);\r\n      const data = setUrl(`https://restcountries.com/v3/name/${search}`);\r\n      await setTimeout(() => {\r\n        setLoading(true);\r\n      }, 600);\r\n    }\r\n  };\r\n  const onKeyPressSearch = async (e) => {\r\n    if(e.keyCode ===13){\r\n  \r\n      if (search === ''){\r\n        setError(true);\r\n        e.preventDefault();\r\n        console.log(\"err\");\r\n      }else{\r\n        setLoading(false);\r\n        e.preventDefault();\r\n        const data = setUrl(`https://restcountries.com/v3/name/${search}`);\r\n        await setTimeout(() => {\r\n          setLoading(true);\r\n        }, 600);\r\n      }\r\n    }\r\n  };\r\n  const indexOfLastPost = currentPage * postsPerPage;\r\n  const indexOfFirstPost = indexOfLastPost - postsPerPage;\r\n  let currentPosts = [];\r\n  if(contry.status === 404){\r\n    window.location.reload(true);\r\n  }else{\r\n    currentPosts = contry.slice(indexOfFirstPost,indexOfLastPost);\r\n  }\r\n  \r\n  return (\r\n    <Container sx={{mt: \"30px\", width: \"100vw\", height: \"100vh\" }}>\r\n      <Box\r\n        sx={{\r\n          boxShadow: \"none\",\r\n          display: \"flex\",\r\n          ml: \"50px\",\r\n          gap:\"50px\",\r\n          flexWrap:\"wrap\",\r\n          justifyContent:\"space-between\",\r\n          flexDirection: \"row\",\r\n          alignItems:\"center\"\r\n        }}\r\n      >\r\n        <Paper\r\n          elevation={2}\r\n          component=\"form\"\r\n          sx={{\r\n            border: \"1px solid #C4C4C4\",\r\n            boxShadow: \"none\",\r\n            p: \"2px 4px\",\r\n            display: \"flex\",\r\n            alignItems: \"center\",\r\n            width: 400,\r\n          }}\r\n        >\r\n          <IconButton\r\n            onClick={onClickSearch}\r\n            sx={{ p: \"10px\" }}\r\n            aria-label=\"search\"\r\n          >\r\n            <SearchIcon />\r\n          </IconButton>\r\n          <TextField\r\n            sx={{ ml: 1, flex: 1 }}\r\n            placeholder=\"Search for a country\"\r\n            variant=\"standard\"\r\n            error={error}\r\n            id=\"outlined-error-helper-text\"\r\n    \r\n            onChange={handleChangeInput}\r\n            onKeyDown={onKeyPressSearch}\r\n            value={search}\r\n            inputProps={{ \"aria-label\": \"Search for a country\" }}\r\n          />\r\n        </Paper>\r\n\r\n        <FormControl sx={{ width: \"190px\" }}>\r\n          <InputLabel id=\"demo-simple-select-label\">\r\n            Filter by continent\r\n          </InputLabel>\r\n          <Select\r\n            labelId=\"demo-simple-select-label\"\r\n            id=\"demo-simple-select\"\r\n            value={url}\r\n            label=\"Filter by continent\"\r\n            onChange={handleChange}\r\n          >\r\n            <MenuItem value={\"https://restcountries.com/v3/all\"}>All</MenuItem>\r\n            <MenuItem value={\"https://restcountries.com/v3/region/africa\"}>\r\n              Africa\r\n            </MenuItem>\r\n            <MenuItem value={\"https://restcountries.com/v3/region/americas\"}>\r\n              Americas\r\n            </MenuItem>\r\n            <MenuItem value={\"https://restcountries.com/v3/region/asia\"}>\r\n              Asia\r\n            </MenuItem>\r\n            <MenuItem value={\"https://restcountries.com/v3/region/europe\"}>\r\n              Europe\r\n            </MenuItem>\r\n            <MenuItem value={\"https://restcountries.com/v3/region/oceania\"}>\r\n              Oceania\r\n            </MenuItem>\r\n          </Select>\r\n        </FormControl>\r\n      </Box>\r\n\r\n      <Container\r\n        sx={{\r\n          display: \"flex\",\r\n          alignItems: \"center\",\r\n          justifyContent: \"center\",\r\n          flexDirection: \"column\",\r\n          boxShadow: \"none\",\r\n        }}\r\n        component={Box}\r\n        py={3}\r\n      >\r\n        {loading ? (\r\n          <Grid\r\n            container\r\n            justifyContent=\"center\"\r\n            alignItems=\"center\"\r\n            sx={{\r\n              \r\n              width: \"100%\",\r\n              mt: \"50px\",\r\n            }}\r\n          >\r\n            {currentPosts.map((elm, index) => (\r\n              <Grid key={index} item xs={8} sm={3} sx={{ m: \"15px\" }}>\r\n                <Card\r\n                  variant=\"outlined\"\r\n                  sx={{ maxWidth: \"445px\", maxHeight: \"2750px\" }}\r\n                >\r\n                  <CardMedia\r\n                    component=\"img\"\r\n                    height=\"140\"\r\n                    image={elm.flags[0]}\r\n                    alt={elm.name.common}\r\n                  />\r\n                  <CardContent>\r\n                    <Typography\r\n                      sx={{\r\n                        textAlign: \"start\",\r\n                        fontSize: \"16px\",\r\n                        fontWeight: \"bold\",\r\n                      }}\r\n                    >\r\n                      {elm.name.common}\r\n                    </Typography>\r\n                    <Typography\r\n                      variant=\"body2\"\r\n                      color=\"#000\"\r\n                      sx={{ textAlign: \"start\" }}\r\n                    >\r\n                      <span style={{ fontWeight: \"bold\" }}>Population: </span>\r\n                      {elm.population.toLocaleString().replace(/,/g, \" \")}\r\n                    </Typography>\r\n                    <Typography\r\n                      variant=\"body2\"\r\n                      color=\"#000\"\r\n                      sx={{ textAlign: \"start\" }}\r\n                    >\r\n                      <span style={{ fontWeight: \"bold\" }}>Region: </span>\r\n                      {elm.region}\r\n                    </Typography>\r\n                    <Typography\r\n                      variant=\"body2\"\r\n                      color=\"#000\"\r\n                      sx={{ textAlign: \"start\" }}\r\n                    >\r\n                      <span style={{ fontWeight: \"bold\" }}>Capital: </span>\r\n                      {elm.capital}\r\n                    </Typography>\r\n                  </CardContent>\r\n                  <CardActions>\r\n                    <Link\r\n                      style={{ textDecoration: \"none\" }}\r\n                      to={{\r\n                        pathname: `/${elm.region}/${elm.name.common}`,\r\n                      }}\r\n                    >\r\n                      <Button sx={{ ml: \"5px\", mb: \"5px\" }} size=\"small\">\r\n                        Learn More <ChevronRightIcon />\r\n                      </Button>\r\n                    </Link>\r\n                  </CardActions>\r\n                </Card>\r\n              </Grid>\r\n            ))}\r\n          </Grid>\r\n        ) : (\r\n          <Box sx={{ mt: \"200px\", display: \"flex\", boxShadow: \"none\" }}>\r\n            <CircularProgress />\r\n          </Box>\r\n        )}\r\n        <Pagination\r\n          sx={{ pt: \"90px\", mt: \"10px\", mb: \"30px\" }}\r\n          count={Math.round(contry.length / postsPerPage)}\r\n          color=\"secondary\"\r\n          variant=\"outline\"\r\n          shape=\"rounded\"\r\n          hideNextButton={true}\r\n          hidePrevButton={true}\r\n          defaultPage={currentPage}\r\n          onChange={(e) => handleChangePage(e.target.textContent)}\r\n        />\r\n      </Container>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Country;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Link, useParams } from \"react-router-dom\";\r\nimport Box from \"@mui/material/Box\";\r\nimport CardMedia from \"@mui/material/CardMedia\";\r\nimport Container from \"@mui/material/Container\";\r\nimport Stack from \"@mui/material/Stack\";\r\nimport Button from \"@mui/material/Button\";\r\nimport ArrowBackIosIcon from \"@mui/icons-material/ArrowBackIos\";\r\nimport Typography from \"@mui/material/Typography\";\r\n\r\nimport CardActions from \"@mui/material/CardActions\";\r\nimport { width } from \"@mui/system\";\r\nconst CardCountry = () => {\r\n  const { handle } = useParams();\r\n  const [handleC, setHandleC] = useState(handle);\r\n  const [url, setUrl] = useState(\r\n    `https://restcountries.com/v3/name/${handleC}?fullText=true`\r\n  );\r\n  const [contry, setContry] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n  const datos = async () => {\r\n    const data = await fetch(url);\r\n    const dataJson = await data.json();\r\n    setContry(dataJson);\r\n    setLoading(true);\r\n  };\r\n\r\n  useEffect(() => {\r\n    datos();\r\n  });\r\n\r\n  return (\r\n    <>\r\n      <Stack sx={{ ml: \"60px\", mt: \"100px\" }} spacing={2} direction=\"row\">\r\n        <Link\r\n          style={{\r\n            textDecoration: \"none\",\r\n          }}\r\n          to=\"/\"\r\n        >\r\n          <Button variant=\"text\">\r\n            <ArrowBackIosIcon sx={{ mb: \"2px\", fontSize: \"large\" }} />\r\n            Back\r\n          </Button>\r\n        </Link>\r\n      </Stack>\r\n\r\n      <Container\r\n        sx={{\r\n          width: \"100vw\",\r\n          height: \"65vh\",\r\n          display: \"flex\",\r\n          alignItems: \"center\",\r\n          justifyContent: \"center\",\r\n        }}\r\n      >\r\n        {contry.map((elm, index) => (\r\n          <Box\r\n            key={index}\r\n            sx={{\r\n              display: \"flex\",\r\n            }}\r\n          >\r\n            <CardMedia\r\n              component=\"img\"\r\n              height=\"370\"\r\n              image={elm.flags[0]}\r\n              alt=\"green iguana\"\r\n            />\r\n            <Container>\r\n              <Typography sx={{ ml: \"45px\" }} variant=\"h2\">\r\n                {elm.name.common}\r\n              </Typography>\r\n              <Container\r\n                sx={{\r\n                  display: \"flex\",\r\n                  mt: \"30px\",\r\n                }}\r\n              >\r\n                <Container sx={{ textAlign: \"start\" }}>\r\n                  <Typography variant=\"body2\">\r\n                    <span style={{ fontWeight: \"bold\" }}>Population: </span>\r\n                    {elm.population.toLocaleString().replace(/,/g, \" \")}\r\n                  </Typography>\r\n                  <Typography variant=\"body2\">\r\n                    <span style={{ fontWeight: \"bold\" }}>Region: </span>\r\n                    {elm.region}\r\n                  </Typography>\r\n                  <Typography variant=\"body2\">\r\n                    <span style={{ fontWeight: \"bold\" }}>Sub Region: </span>\r\n                    {elm.subregion}\r\n                  </Typography>\r\n                  <Typography variant=\"body2\">\r\n                    <span style={{ fontWeight: \"bold\" }}>Capital: </span>\r\n                    {elm.capital}\r\n                  </Typography>\r\n                </Container>\r\n\r\n                <Container>\r\n                  <Typography variant=\"body2\">\r\n                    <span style={{ fontWeight: \"bold\" }}>\r\n                      Top Level Domain:\r\n                    </span>\r\n                    {elm.tld}\r\n                  </Typography>\r\n                  <Typography variant=\"body2\">\r\n                    <span style={{ fontWeight: \"bold\" }}>Currencies:</span>\r\n                    {Object.values(elm.currencies)[0].name}\r\n                  </Typography>\r\n\r\n                  <Typography variant=\"body2\">\r\n                    <span style={{ fontWeight: \"bold\" }}>Languages: </span>\r\n                    {Object.values(elm.languages)\r\n                      .map((elm) => elm)\r\n                      .join(\", \")}\r\n                  </Typography>\r\n                </Container>\r\n              </Container>\r\n              <Container sx={{ mt: \"30px\" }}>\r\n                <Typography\r\n                  variant=\"body2\"\r\n                  sx={{ ml: \"25px\", display: \"flex\", gap: \"10px\" }}\r\n                >\r\n                  <span style={{ fontWeight: \"bold\" }}>Border Countries: </span>\r\n                  {elm.borders === undefined ? (\r\n                    <span>No border contries</span>\r\n                  ) : (\r\n                    Object.values(elm.borders).map((elm, index) => (\r\n                      <CardActions key={index}>\r\n                        <Button sx={{ ml: \"5px\", mb: \"5px\" }} size=\"small\">\r\n                          {elm}\r\n                        </Button>\r\n                      </CardActions>\r\n                    ))\r\n                  )}\r\n                </Typography>\r\n              </Container>\r\n            </Container>\r\n          </Box>\r\n        ))}\r\n      </Container>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default CardCountry;\r\n","import \"./App.css\";\r\nimport Navbar from \"./components/Navbar\";\r\nimport Country from \"./components/Country\";\r\nimport CardCountry from \"./components/CardCountry\";\r\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\r\nfunction App() {\r\n  return (\r\n    <Router>\r\n      <Navbar></Navbar>\r\n      <Switch>\r\n        <Route path=\"/:region/:handle\">\r\n          <CardCountry />\r\n        </Route>\r\n        <Route path=\"/\">\r\n          <Country />\r\n        </Route>\r\n      </Switch>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\n\r\nimport App from \"./App\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\n"],"sourceRoot":""}